import aiogram 
from aiogram import Dispatcher, Bot, types
from aiogram.utils import executor
import time
from magic_filter import F

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
REG= "–õ—É—Ü—å–∫"
TOKEN ='6880051355:AAErJpdMcDSm76dzmXQoIdHuf07VUMfB5NQ'

bot = Bot(TOKEN)
dp = Dispatcher(bot)


chat_id_set= -1002004258698

region=ReplyKeyboardMarkup(resize_keyboard=True,row_width=(2))


STARTM =f"–ü—Ä–∏–≤—ñ—Ç, —Ü–µ –∞–¥–º—ñ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª—É {REG}. –Ø–∫—â–æ —Ç–∏ –º–∞—î—à –ø–µ–≤–Ω—É –Ω–æ–≤–∏–Ω—É —á–∏ –∑–≤—ñ—Å—Ç–∫—É, –Ω–∞–¥—ñ—à–ª–∏ —ó—ó —Å—é–¥–∏ —ñ –º–∏ –≤—ñ–¥—Ä–µ–∞–≥—É—î–º–æ" #—Ç—É–∫—Å—Ç –¥–ª—è 


reg1="–õ—É—Ü—å–∫–∏–π"
region.add(KeyboardButton(text=reg1))
@dp.message_handler(text=["–õ—É—Ü—å–∫–∏–π"] )
async def change_reg1(message: types.Message):
        global set_reg 
        set_reg=reg1
        
        await message.answer(text=f"–ü—Ä–∏–≤—ñ—Ç, {user}.–í–∏ –ø–æ—Ç—Ä–∞–ø–∏–ª–∏ –∑–∞ –∞–¥—Ä–µ—Å–æ—é –Ω–∞ –∫–∞–Ω–∞–ª –°–ª–∞–≤–Ω–∏–π {REG} üá∫üá¶. –Ø–∫—â–æ —É –í–∞—Å —î –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞ —ñ–Ω—Ñ–∞: —Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ –∞–±–æ –Ω–æ–≤–∏–Ω–∞ ‚Äî –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —ó—ó —Å—é–¥–∏.–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ü–µ —Ç–∞ –¥–∞—Ç—É/—á–∞—Å –∑–Ω—ñ–º–∞–Ω–Ω—è.–î—è–∫—É—î–º–æ –∑–∞ –¥–æ–≤—ñ—Ä—É üíôüíõ",reply_markup=types.ReplyKeyboardRemove())
reg2="–í–æ–ª–æ–¥–∏–º–∏—Ä—Å—å–∫–∏–π"
region.add(KeyboardButton(text=reg2))
@dp.message_handler(text=["–í–æ–ª–æ–¥–∏–º–∏—Ä—Å—å–∫–∏–π"] )
async def change_reg1(message: types.Message):
        global set_reg 
        set_reg=reg2
        await message.answer(text=f"–ü—Ä–∏–≤—ñ—Ç, {user}.–í–∏ –ø–æ—Ç—Ä–∞–ø–∏–ª–∏ –∑–∞ –∞–¥—Ä–µ—Å–æ—é –Ω–∞ –∫–∞–Ω–∞–ª –°–ª–∞–≤–Ω–∏–π {REG} üá∫üá¶. –Ø–∫—â–æ —É –í–∞—Å —î –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞ —ñ–Ω—Ñ–∞: —Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ –∞–±–æ –Ω–æ–≤–∏–Ω–∞ ‚Äî –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —ó—ó —Å—é–¥–∏.–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ü–µ —Ç–∞ –¥–∞—Ç—É/—á–∞—Å –∑–Ω—ñ–º–∞–Ω–Ω—è.–î—è–∫—É—î–º–æ –∑–∞ –¥–æ–≤—ñ—Ä—É üíôüíõ",reply_markup=types.ReplyKeyboardRemove())
reg3="–ö–∞–º—ñ–Ω—å-–ö–∞—à–∏—Ä—Å—å–∫–∏–π"
region.add(KeyboardButton(text=reg3))
@dp.message_handler(text=["–ö–∞–º—ñ–Ω—å-–ö–∞—à–∏—Ä—Å—å–∫–∏–π"] )
async def change_reg1(message: types.Message):
        global set_reg 
        set_reg=reg3
        await message.answer(text=f"–ü—Ä–∏–≤—ñ—Ç, {user}.–í–∏ –ø–æ—Ç—Ä–∞–ø–∏–ª–∏ –∑–∞ –∞–¥—Ä–µ—Å–æ—é –Ω–∞ –∫–∞–Ω–∞–ª –°–ª–∞–≤–Ω–∏–π {REG} üá∫üá¶. –Ø–∫—â–æ —É –í–∞—Å —î –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞ —ñ–Ω—Ñ–∞: —Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ –∞–±–æ –Ω–æ–≤–∏–Ω–∞ ‚Äî –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —ó—ó —Å—é–¥–∏.–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ü–µ —Ç–∞ –¥–∞—Ç—É/—á–∞—Å –∑–Ω—ñ–º–∞–Ω–Ω—è.–î—è–∫—É—î–º–æ –∑–∞ –¥–æ–≤—ñ—Ä—É üíôüíõ",reply_markup=types.ReplyKeyboardRemove())
reg4="–ö–æ–≤–µ–ª—å—Å—å–∫–∏–π"
region.add(KeyboardButton(text=reg4))
@dp.message_handler(text=["–ö–æ–≤–µ–ª—å—Å—å–∫–∏–π"] )
async def change_reg1(message: types.Message):
        global set_reg 
        set_reg=reg4
        await message.answer(text=f"–ü—Ä–∏–≤—ñ—Ç, {user}.–í–∏ –ø–æ—Ç—Ä–∞–ø–∏–ª–∏ –∑–∞ –∞–¥—Ä–µ—Å–æ—é –Ω–∞ –∫–∞–Ω–∞–ª –°–ª–∞–≤–Ω–∏–π {REG} üá∫üá¶. –Ø–∫—â–æ —É –í–∞—Å —î –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞ —ñ–Ω—Ñ–∞: —Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ –∞–±–æ –Ω–æ–≤–∏–Ω–∞ ‚Äî –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —ó—ó —Å—é–¥–∏.–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ü–µ —Ç–∞ –¥–∞—Ç—É/—á–∞—Å –∑–Ω—ñ–º–∞–Ω–Ω—è.–î—è–∫—É—î–º–æ –∑–∞ –¥–æ–≤—ñ—Ä—É üíôüíõ",reply_markup=types.ReplyKeyboardRemove())


    



    
    
    
    
    

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    global user 
    user = message.from_user.first_name
    await message.delete()
    time.sleep(0.7)
    await message.answer(text=f"–í—ñ—Ç–∞—î–º–æ {user}.")
    time.sleep(0.4)
    await message.answer(text="–í–∏–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω –õ—å–≤–æ–≤—É", reply_markup=region )
    
    
  


 
 
@dp.message_handler(content_types=['any'])
async def echo(message: types.Message):
   await bot.send_message(chat_id_set, text=f"–Ω—ñ–∫:{user} —Ä–µ–≥—ñ–æ–Ω:{set_reg}")
   await bot.forward_message(chat_id_set, message.from_user.id, message.message_id)
   time.sleep (5)
   await bot.send_message( chat_id=message.from_id, text="–≤–∞—à–∞ –Ω–æ–≤–∏–Ω–∞ –±—É–ª–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞")




if __name__ == '__main__':
   
    executor.start_polling(dp)


